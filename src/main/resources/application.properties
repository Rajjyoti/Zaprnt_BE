spring.data.mongodb.uri=mongodb://localhost:27017/zaprnt
spring.data.mongodb.auto-index-creation=true

elasticsearch.host=localhost
elasticsearch.port=9200

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*


#logging.level.org.springframework=DEBUG
#logging.level.com.zaprent=DEBUG

#./gradlew bootRun --stacktrace



#ES and Kibana Local:

#docker network create elastic
#docker pull docker.elastic.co/elasticsearch/elasticsearch:7.17.23
#docker run --name es01-test --net elastic -p 127.0.0.1:9200:9200 -p 127.0.0.1:9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.17.23

#docker pull docker.elastic.co/kibana/kibana:7.17.23
#docker run --name kib01-test --net elastic -p 127.0.0.1:5601:5601 -e "ELASTICSEARCH_HOSTS=http://es01-test:9200" docker.elastic.co/kibana/kibana:7.17.23